<?php
/**
 * @package cc_testimonial
 */
/**
Plugin Name: Doctor Testimonial
Plugin URI: https://cleancoded.com/plugins
Description: Custom Doctor testimonials plugin, extendable, reusable under GPL v3 License | Made by cleancoded.com
Version:1.0
Author: cleancoded.com
Author URI: https://cleancoded.com
License: GPL V2 or later
Text Domain: cc_testimonials
*/
defined('ABSPATH') or die("Are you sure you want to do this?");
if ( ! function_exists('doctor_testimonials_post_type') ) {

// Register Custom Post Type
function doctor_testimonials_post_type() {

	$labels = array(
		'name'                  => _x( 'Doctor Testimonials', 'Post Type General Name', 'cc_testimonials' ),
		'singular_name'         => _x( 'Doctor Testimonial', 'Post Type Singular Name', 'cc_testimonials' ),
		'menu_name'             => __( 'Doctor Testimonials', 'cc_testimonials' ),
		'name_admin_bar'        => __( 'Doctor Testimonial', 'cc_testimonials' ),
		'archives'              => __( 'Item Archives', 'cc_testimonials' ),
		'attributes'            => __( 'Item Attributes', 'cc_testimonials' ),
		'parent_item_colon'     => __( 'Parent Item:', 'cc_testimonials' ),
		'all_items'             => __( 'All Testimonials', 'cc_testimonials' ),
		'add_new_item'          => __( 'Add New Testimonial', 'cc_testimonials' ),
		'add_new'               => __( 'Add New', 'cc_testimonials' ),
		'new_item'              => __( 'New Testimonial', 'cc_testimonials' ),
		'edit_item'             => __( 'Edit Testimonial', 'cc_testimonials' ),
		'update_item'           => __( 'Update Testimonial', 'cc_testimonials' ),
		'view_item'             => __( 'View Testimonial', 'cc_testimonials' ),
		'view_items'            => __( 'View Testimonials', 'cc_testimonials' ),
		'search_items'          => __( 'Search Testimonial', 'cc_testimonials' ),
		'not_found'             => __( 'Not found', 'cc_testimonials' ),
		'not_found_in_trash'    => __( 'Not found in Trash', 'cc_testimonials' ),
		'featured_image'        => __( 'Featured Image', 'cc_testimonials' ),
		'set_featured_image'    => __( 'Set featured image', 'cc_testimonials' ),
		'remove_featured_image' => __( 'Remove featured image', 'cc_testimonials' ),
		'use_featured_image'    => __( 'Use as featured image', 'cc_testimonials' ),
		'insert_into_item'      => __( 'Insert into item', 'cc_testimonials' ),
		'uploaded_to_this_item' => __( 'Uploaded to this item', 'cc_testimonials' ),
		'items_list'            => __( 'Items list', 'cc_testimonials' ),
		'items_list_navigation' => __( 'Items list navigation', 'cc_testimonials' ),
		'filter_items_list'     => __( 'Filter items list', 'cc_testimonials' ),
	);
	$args = array(
		'label'                 => __( 'Doctor Testimonial', 'cc_testimonials' ),
		'description'           => __( 'Add Testimonials feature to doctor post type', 'cc_testimonials' ),
		'labels'                => $labels,
		'supports'              => array( 'title', 'editor', 'thumbnail', 'revisions', 'custom-fields', 'page-attributes', ),
		'taxonomies'            => array( 'category', 'post_tag' ),
		'hierarchical'          => true,
		'public'                => true,
		'show_ui'               => true,
		'show_in_menu'          => true,
		'menu_position'         => 5,
		'menu_icon'             => 'dashicons-admin-comments',
		'show_in_admin_bar'     => true,
		'show_in_nav_menus'     => true,
		'can_export'            => true,
		'has_archive'           => true,		
		'exclude_from_search'   => false,
		'publicly_queryable'    => true,
		'capability_type'       => 'page',
	);
	register_post_type( 'doctor_testimonials', $args );

}
add_action( 'init', 'doctor_testimonials_post_type', 0 );

}

/**
 * Generated by the WordPress Meta Box generator
 * at http://jeremyhixon.com/tool/wordpress-meta-box-generator/
 */

function testimonial_details_get_meta( $value ) {
	global $post;

	$field = get_post_meta( $post->ID, $value, true );
	if ( ! empty( $field ) ) {
		return is_array( $field ) ? stripslashes_deep( $field ) : stripslashes( wp_kses_decode_entities( $field ) );
	} else {
		return false;
	}
}

function testimonial_details_add_meta_box() {
	add_meta_box(
		'testimonial_details-testimonial-details',
		__( 'Testimonial Details', 'testimonial_details' ),
		'testimonial_details_html',
		'doctor_testimonials',
		'normal',
		'default'
	);
}
add_action( 'add_meta_boxes', 'testimonial_details_add_meta_box' );

function testimonial_details_html( $post) {
	wp_nonce_field( '_testimonial_details_nonce', 'testimonial_details_nonce' ); ?>

	<p>
		<label for="testimonial_details_choose_doctor"><?php _e( 'Choose Doctor', 'testimonial_details' ); ?></label><br>
<?php 
 //get doctor array
$doctors = get_posts(array('posts_per_page' => -1, 'post_type'=>'doctors'));
 
  $get_selected_doc = explode(",", review_details_get_meta( 'testimonial_details_choose_doctor' ));
?>		<select name="testimonial_details_choose_doctor[]" multiple="multiple" id="testimonial_details_choose_doctor">
<?php
foreach($doctors as $doctor)
{ 

echo  '<option value="'.$doctor->ID.'"'. (in_array($doctor->ID,$get_selected_doc) ? 'selected' : '').'>'.$doctor->post_title.'</option>';
}
?>
		</select>

	</p>	<p>
		<label for="testimonial_details_speciality"><?php _e( 'Speciality', 'testimonial_details' ); ?></label><br>
<?php  $taxonomies = get_terms(array('taxonomy'=>'doctors_treatments', 'hide_empty'=>false));
?>
		<select name="testimonial_details_speciality" id="testimonial_details_speciality">
<?php
	foreach($taxonomies	as $taxonomies_value){
echo	'<option value="'.$taxonomies_value->term_id.'"'. ((testimonial_details_get_meta( 'testimonial_details_speciality' ) == $taxonomies_value->term_id ) ? 'selected' : '').'>'.$taxonomies_value->name.'</option>';
}
?>
		</select>
	</p><?php
//get users
$wp_users_list = get_users();
?>
<label>Choose User</label><br/>
<select name="testimonial_details_user" id="testimonial_details_user">

<?php 
  foreach($wp_users_list as $user_obj){
echo '<option value="'.$user_obj->ID.'" '. ((testimonial_details_get_meta( 'testimonial_details_user' ) == $user_obj->ID ) ? 'selected' : '').'>'.$user_obj->display_name.'</option>';
}
?>
</select><?php
}


function testimonial_details_save( $post_id ) {
	if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) return;
	if ( ! isset( $_POST['testimonial_details_nonce'] ) || ! wp_verify_nonce( $_POST['testimonial_details_nonce'], '_testimonial_details_nonce' ) ) return;
	if ( ! current_user_can( 'edit_post', $post_id ) ) return;

	if ( isset( $_POST['testimonial_details_choose_doctor'] ) )
		update_post_meta( $post_id, 'testimonial_details_choose_doctor', esc_attr(implode(",", $_POST['testimonial_details_choose_doctor'] ) ) );
	if ( isset( $_POST['testimonial_details_user'] ) )
		update_post_meta( $post_id, 'testimonial_details_user', esc_attr( $_POST['testimonial_details_user'] ) );
	if ( isset( $_POST['testimonial_details_speciality'] ) )
		update_post_meta( $post_id, 'testimonial_details_speciality', esc_attr( $_POST['testimonial_details_speciality'] ) );
  
}
add_action( 'save_post', 'testimonial_details_save' );

/*
	Usage: testimonial_details_get_meta( 'testimonial_details_choose_doctor' )
	Usage: testimonial_details_get_meta( 'testimonial_details_rating' )
*/
